rule "parse_logs"
when
  has_field("message") && regex("service=\\w+", to_string($message.message)).matches
then
  let svc = regex("service=(\\w+)", to_string($message.message));
  set_field("source_service", svc.group[1]);
end

rule "parse_network_event"
when
  has_field("message")
then
  let msg = to_string($message.message);
  let svc = regex("service=(\\w+)", msg);
  let ip  = regex("(\d+\.\d+\.\d+\.\d+)\.(\d+) > (\d+\.\d+\.\d+\.\d+)\.(\d+)", msg);
  let proto = regex("proto=(\w+)", msg);
  set_fields(fields: {
    source_service: svc.matches ? svc.group[1] : null,
    src_ip: ip.matches ? ip.group[1] : null,
    src_port: ip.matches ? ip.group[2] : null,
    dst_ip: ip.matches ? ip.group[3] : null,
    dst_port: ip.matches ? ip.group[4] : null,
    protocol: proto.matches ? proto.group[1] : null
  });
end
